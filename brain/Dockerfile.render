FROM php:8.3-apache

# Install system dependencies, PostgreSQL development libraries, and Composer
RUN apt-get update && apt-get install -y \
    libpq-dev \
    git \
    unzip \
    && rm -rf /var/lib/apt/lists/*

# Install Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Install PostgreSQL PHP extensions
RUN docker-php-ext-install pdo_pgsql pgsql

# Enable Apache rewrite module
RUN a2enmod rewrite

# Set working directory
WORKDIR /var/www/html

# Copy Laravel application files from brain directory
COPY brain/ .

# LESSON LEARNED #1: Force .env precedence over ALL Render environment variables
ENV APP_KEY=""
ENV APP_NAME=""
ENV APP_ENV=""
ENV APP_DEBUG=""
ENV APP_URL=""

# LESSON LEARNED #2: Create comprehensive .env file (APP_KEY issue from previous attempts)
RUN echo "# Laravel Configuration - COMPLETE DEFINITIVE SOLUTION" > .env && \
    echo "APP_NAME=QuotingFast-Brain" >> .env && \
    echo "APP_ENV=production" >> .env && \
    echo "APP_KEY=base64:duG47cob+xamE/vqPKxphK94zxuIXiOMiI76p/7UVWQ=" >> .env && \
    echo "APP_DEBUG=false" >> .env && \
    echo "APP_URL=https://quotingfast-brain.onrender.com" >> .env && \
    echo "APP_TIMEZONE=UTC" >> .env && \
    echo "" >> .env && \
    echo "# Logging" >> .env && \
    echo "LOG_CHANNEL=stack" >> .env && \
    echo "LOG_LEVEL=error" >> .env && \
    echo "" >> .env && \
    echo "# Database" >> .env && \
    echo "DB_CONNECTION=pgsql" >> .env && \
    echo "" >> .env && \
    echo "# Cache & Session" >> .env && \
    echo "CACHE_DRIVER=file" >> .env && \
    echo "SESSION_DRIVER=file" >> .env && \
    echo "SESSION_LIFETIME=120" >> .env && \
    echo "" >> .env && \
    echo "# Queue" >> .env && \
    echo "QUEUE_CONNECTION=sync" >> .env

# LESSON LEARNED #3: Nuclear vendor destruction (KEEPS symfony/clock elimination)
RUN echo "=== NUCLEAR VENDOR REBUILD (symfony/clock elimination) ===" && \
    rm -rf vendor/ && \
    rm -rf composer.lock && \
    rm -rf ~/.composer/cache/ && \
    composer clear-cache && \
    echo "✅ All composer artifacts destroyed (symfony/clock eliminated)"

# LESSON LEARNED #4: Proper Laravel framework installation (NEW FIX)
RUN composer install --no-dev --no-cache --optimize-autoloader && \
    echo "✅ Laravel framework properly installed" && \
    ls -la vendor/laravel/ && \
    echo "✅ Laravel framework verified"

# LESSON LEARNED #5: Targeted autoloader regeneration (FIXED - don't destroy Laravel)
RUN echo "=== TARGETED AUTOLOADER REGENERATION ===" && \
    composer dump-autoload --optimize --no-scripts --no-cache && \
    echo "✅ Autoloader regenerated without destroying Laravel framework"

# LESSON LEARNED #6: Laravel cache clearing (KEEP WORKING SOLUTION)
RUN rm -rf bootstrap/cache/*.php && \
    rm -rf storage/framework/cache/* && \
    rm -rf storage/framework/views/* && \
    rm -rf storage/framework/sessions/* && \
    mkdir -p storage/framework/cache/data && \
    mkdir -p storage/framework/views && \
    mkdir -p storage/framework/sessions

# LESSON LEARNED #7: Nuclear service provider cache prevention (KEEP WORKING SOLUTION)
RUN echo '#!/bin/bash' > /usr/local/bin/clear-laravel-cache.sh && \
    echo 'rm -f /var/www/html/bootstrap/cache/packages.php' >> /usr/local/bin/clear-laravel-cache.sh && \
    echo 'rm -f /var/www/html/bootstrap/cache/services.php' >> /usr/local/bin/clear-laravel-cache.sh && \
    echo 'rm -f /var/www/html/bootstrap/cache/config.php' >> /usr/local/bin/clear-laravel-cache.sh && \
    chmod +x /usr/local/bin/clear-laravel-cache.sh && \
    /usr/local/bin/clear-laravel-cache.sh && \
    echo "Service provider cache completely disabled - Laravel will discover providers dynamically"

# Set permissions
RUN chown -R www-data:www-data /var/www/html \
    && chmod -R 755 /var/www/html

# Configure Apache for public directory
RUN sed -i 's|/var/www/html|/var/www/html/public|g' /etc/apache2/sites-available/000-default.conf

# CUMULATIVE VERIFICATION: All lessons learned + Laravel framework verification
RUN echo "=== CUMULATIVE VERIFICATION: ALL LESSONS + LARAVEL FRAMEWORK ===" && \
    echo "" && \
    echo "1. symfony/clock ELIMINATED (should NOT exist):" && \
    grep -A 10 '"require"' composer.json && \
    composer show | grep symfony || echo "✅ NO symfony packages found" && \
    echo "" && \
    echo "2. Laravel framework INSTALLED (should exist):" && \
    ls -la vendor/laravel/framework/ && \
    composer show laravel/framework && \
    echo "" && \
    echo "3. Illuminate\\Foundation\\Application (should exist):" && \
    find vendor/ -name "Application.php" | grep Foundation && \
    echo "" && \
    echo "4. APP_KEY verification:" && \
    echo "   ENV APP_KEY: '$APP_KEY'" && \
    echo "   .env APP_KEY: $(grep 'APP_KEY' .env)" && \
    echo "" && \
    echo "5. Autoloader files:" && \
    ls -la vendor/composer/autoload_*.php && \
    echo "" && \
    echo "=== ALL ISSUES FIXED: symfony/clock GONE, Laravel framework PRESENT ==="

# LESSON LEARNED #8: Startup cache clearing (KEEP WORKING SOLUTION)
RUN echo '#!/bin/bash' > /usr/local/bin/startup.sh && \
    echo 'echo "=== STARTUP: Clearing Laravel cache ==="' >> /usr/local/bin/startup.sh && \
    echo '/usr/local/bin/clear-laravel-cache.sh' >> /usr/local/bin/startup.sh && \
    echo 'echo "=== STARTUP: Laravel cache cleared ==="' >> /usr/local/bin/startup.sh && \
    echo 'echo "=== STARTUP: Starting Apache ==="' >> /usr/local/bin/startup.sh && \
    echo 'exec apache2-foreground' >> /usr/local/bin/startup.sh && \
    chmod +x /usr/local/bin/startup.sh

EXPOSE 80
CMD ["/usr/local/bin/startup.sh"]