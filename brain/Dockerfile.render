FROM php:8.3-apache

# Install system dependencies, PostgreSQL development libraries, and Composer
RUN apt-get update && apt-get install -y \
    libpq-dev \
    git \
    unzip \
    && rm -rf /var/lib/apt/lists/*

# Install Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Install PostgreSQL PHP extensions
RUN docker-php-ext-install pdo_pgsql pgsql

# Enable Apache rewrite module
RUN a2enmod rewrite

# Set working directory
WORKDIR /var/www/html

# CUMULATIVE LESSON #1: Fresh Laravel installation (avoiding corrupted state)
RUN echo "=== FRESH LARAVEL INSTALLATION WITH ALL LESSONS LEARNED ===" && \
    composer create-project laravel/laravel . --no-dev --prefer-dist && \
    echo "✅ Fresh Laravel 12 installed"

# CUMULATIVE LESSON #2: Force .env precedence over ALL Render environment variables
ENV APP_KEY=""
ENV APP_NAME=""
ENV APP_ENV=""
ENV APP_DEBUG=""
ENV APP_URL=""

# CUMULATIVE LESSON #3: Create comprehensive .env file (APP_KEY lesson learned)
RUN echo "# Laravel Configuration - FRESH WITH ALL LESSONS LEARNED" > .env && \
    echo "APP_NAME=QuotingFast-Brain" >> .env && \
    echo "APP_ENV=production" >> .env && \
    echo "APP_KEY=base64:duG47cob+xamE/vqPKxphK94zxuIXiOMiI76p/7UVWQ=" >> .env && \
    echo "APP_DEBUG=false" >> .env && \
    echo "APP_URL=https://quotingfast-brain.onrender.com" >> .env && \
    echo "APP_TIMEZONE=UTC" >> .env && \
    echo "" >> .env && \
    echo "# Logging" >> .env && \
    echo "LOG_CHANNEL=stack" >> .env && \
    echo "LOG_LEVEL=error" >> .env && \
    echo "" >> .env && \
    echo "# Database" >> .env && \
    echo "DB_CONNECTION=pgsql" >> .env && \
    echo "" >> .env && \
    echo "# Cache & Session" >> .env && \
    echo "CACHE_DRIVER=file" >> .env && \
    echo "SESSION_DRIVER=file" >> .env && \
    echo "SESSION_LIFETIME=120" >> .env && \
    echo "" >> .env && \
    echo "# Queue" >> .env && \
    echo "QUEUE_CONNECTION=sync" >> .env

# CUMULATIVE LESSON #4: Ensure symfony/clock is NOT in dependencies (MAJOR VICTORY MAINTAINED)
RUN echo "=== ENSURING SYMFONY/CLOCK ELIMINATION (VICTORY MAINTAINED) ===" && \
    composer remove symfony/clock --no-scripts || echo "symfony/clock not present (good)" && \
    grep -v "symfony/clock" composer.json > composer.json.tmp && mv composer.json.tmp composer.json && \
    echo "✅ symfony/clock elimination CONFIRMED"

# CUMULATIVE LESSON #5: Regenerate autoloader without symfony/clock
RUN echo "=== CLEAN AUTOLOADER GENERATION ===" && \
    composer dump-autoload --optimize --no-scripts && \
    echo "✅ Clean autoloader generated"

# CUMULATIVE LESSON #6: Laravel cache clearing (learned from previous attempts)
RUN rm -rf bootstrap/cache/*.php && \
    rm -rf storage/framework/cache/* && \
    rm -rf storage/framework/views/* && \
    rm -rf storage/framework/sessions/* && \
    mkdir -p storage/framework/cache/data && \
    mkdir -p storage/framework/views && \
    mkdir -p storage/framework/sessions

# CUMULATIVE LESSON #7: Nuclear service provider cache prevention (learned lesson)
RUN echo '#!/bin/bash' > /usr/local/bin/clear-laravel-cache.sh && \
    echo 'rm -f /var/www/html/bootstrap/cache/packages.php' >> /usr/local/bin/clear-laravel-cache.sh && \
    echo 'rm -f /var/www/html/bootstrap/cache/services.php' >> /usr/local/bin/clear-laravel-cache.sh && \
    echo 'rm -f /var/www/html/bootstrap/cache/config.php' >> /usr/local/bin/clear-laravel-cache.sh && \
    chmod +x /usr/local/bin/clear-laravel-cache.sh && \
    /usr/local/bin/clear-laravel-cache.sh && \
    echo "Service provider cache prevention enabled"

# CUMULATIVE LESSON #8: Copy business logic from original brain (if any exists)
COPY brain/routes/ routes/ 2>/dev/null || echo "No custom routes to copy"
COPY brain/app/Http/Controllers/ app/Http/Controllers/ 2>/dev/null || echo "No custom controllers to copy"
COPY brain/resources/views/ resources/views/ 2>/dev/null || echo "No custom views to copy"

# Set permissions
RUN chown -R www-data:www-data /var/www/html \
    && chmod -R 755 /var/www/html

# Configure Apache for public directory
RUN sed -i 's|/var/www/html|/var/www/html/public|g' /etc/apache2/sites-available/000-default.conf

# CUMULATIVE LESSON #9: Comprehensive verification of fresh installation
RUN echo "=== COMPREHENSIVE VERIFICATION: FRESH LARAVEL + ALL LESSONS ===" && \
    echo "1. Laravel framework verification:" && \
    php -r "require 'vendor/autoload.php'; new Illuminate\\Foundation\\Application(realpath(__DIR__)); echo '✅ Laravel Application works\n';" && \
    echo "" && \
    echo "2. symfony/clock elimination verification:" && \
    (composer show | grep symfony || echo "✅ NO symfony packages found") && \
    echo "" && \
    echo "3. APP_KEY verification:" && \
    echo "   ENV APP_KEY: '$APP_KEY'" && \
    echo "   .env APP_KEY: $(grep 'APP_KEY' .env)" && \
    echo "" && \
    echo "✅ FRESH LARAVEL WITH ALL CUMULATIVE LESSONS VERIFIED"

# CUMULATIVE LESSON #10: Enhanced startup with all learned cache clearing
RUN echo '#!/bin/bash' > /usr/local/bin/startup.sh && \
    echo 'echo "=== STARTUP: Fresh Laravel with all lessons learned ==="' >> /usr/local/bin/startup.sh && \
    echo '/usr/local/bin/clear-laravel-cache.sh' >> /usr/local/bin/startup.sh && \
    echo 'echo "=== STARTUP: Cache cleared ==="' >> /usr/local/bin/startup.sh && \
    echo 'echo "=== STARTUP: Starting Apache ==="' >> /usr/local/bin/startup.sh && \
    echo 'exec apache2-foreground' >> /usr/local/bin/startup.sh && \
    chmod +x /usr/local/bin/startup.sh

EXPOSE 80
CMD ["/usr/local/bin/startup.sh"]