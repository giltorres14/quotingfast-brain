FROM php:8.3-apache

# CUMULATIVE LEARNING: Docker cache corruption on Render requires aggressive cache busting
# Solution: Use timestamp-based ARG that changes on every build
ARG CACHEBUST=1
RUN echo "Build timestamp: $(date +%s) - Cache bust: ${CACHEBUST}"

# CUMULATIVE LEARNING: Install all system dependencies in ONE layer to minimize cache issues
RUN apt-get update && apt-get install -y \
    libpq-dev \
    git \
    unzip \
    procps \
    libzip-dev \
    libicu-dev \
    libonig-dev \
    libxml2-dev \
    zip \
    curl \
    libsqlite3-dev \
    && docker-php-ext-install pdo pdo_pgsql pdo_mysql pdo_sqlite mysqli zip intl opcache xml \
    && docker-php-ext-enable pdo pdo_pgsql pdo_mysql pdo_sqlite mysqli zip intl opcache xml \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Install Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Enable Apache rewrite module
RUN a2enmod rewrite

# Set working directory
WORKDIR /var/www/html

# Copy Laravel application
COPY . /var/www/html/

# CUMULATIVE LEARNING: Clear ALL caches before composer install
RUN rm -rf vendor/ bootstrap/cache/*.php storage/framework/cache/* storage/framework/views/* storage/framework/sessions/*

# Install dependencies
RUN composer install --no-dev --prefer-dist --optimize-autoloader --no-cache

# CUMULATIVE LEARNING: Force .env with PostgreSQL configuration
RUN echo "APP_NAME=QuotingFast-Brain" > .env && \
    echo "APP_ENV=production" >> .env && \
    echo "APP_KEY=base64:J4kS4Yr5fLJpnwGIDjGfIiCfHqZU+/nnQgxG8jNi3Iw=" >> .env && \
    echo "APP_DEBUG=false" >> .env && \
    echo "APP_URL=https://quotingfast-brain-ohio.onrender.com" >> .env && \
    echo "LOG_CHANNEL=stack" >> .env && \
    echo "LOG_LEVEL=error" >> .env && \
    echo "DB_CONNECTION=pgsql" >> .env && \
    echo "DB_HOST=dpg-d277kvk9c44c7388bpg0-a" >> .env && \
    echo "DB_PORT=5432" >> .env && \
    echo "DB_DATABASE=brain_production" >> .env && \
    echo "DB_USERNAME=brain_user" >> .env && \
    echo "DB_PASSWORD=KoK8TYXZ6PShPKi8LTSdhHQQsCrnzcCQ" >> .env && \
    echo "CACHE_DRIVER=file" >> .env && \
    echo "SESSION_DRIVER=file" >> .env && \
    echo "QUEUE_CONNECTION=sync" >> .env

# Set permissions
RUN chown -R www-data:www-data /var/www/html && \
    chmod -R 755 /var/www/html && \
    chmod -R 777 storage bootstrap/cache

# Configure Apache for Laravel
RUN echo "<VirtualHost *:80>" > /etc/apache2/sites-available/000-default.conf && \
    echo "    DocumentRoot /var/www/html/public" >> /etc/apache2/sites-available/000-default.conf && \
    echo "    <Directory /var/www/html/public>" >> /etc/apache2/sites-available/000-default.conf && \
    echo "        Options Indexes FollowSymLinks" >> /etc/apache2/sites-available/000-default.conf && \
    echo "        AllowOverride All" >> /etc/apache2/sites-available/000-default.conf && \
    echo "        Require all granted" >> /etc/apache2/sites-available/000-default.conf && \
    echo "    </Directory>" >> /etc/apache2/sites-available/000-default.conf && \
    echo "    ErrorLog \${APACHE_LOG_DIR}/error.log" >> /etc/apache2/sites-available/000-default.conf && \
    echo "    CustomLog \${APACHE_LOG_DIR}/access.log combined" >> /etc/apache2/sites-available/000-default.conf && \
    echo "</VirtualHost>" >> /etc/apache2/sites-available/000-default.conf

# CUMULATIVE LEARNING: Simple startup script that ensures clean state
RUN echo '#!/bin/bash' > /usr/local/bin/startup.sh && \
    echo 'rm -f bootstrap/cache/*.php' >> /usr/local/bin/startup.sh && \
    echo 'php artisan config:clear' >> /usr/local/bin/startup.sh && \
    echo 'php artisan cache:clear' >> /usr/local/bin/startup.sh && \
    echo 'php artisan migrate --force' >> /usr/local/bin/startup.sh && \
    echo 'exec apache2-foreground' >> /usr/local/bin/startup.sh && \
    chmod +x /usr/local/bin/startup.sh

EXPOSE 80
CMD ["/usr/local/bin/startup.sh"]